module SHIFTER(A,OpCode,Q,C);
  parameter NBITS = 4;
  input A[NBITS-1:0];
  input OpCode [2:0];
  output Q [NBITS-1:0];
  output C;
  reg S [NBITS-1:0];

  always @(OpCode)
    case(OpCode)
    3'b000 :
      S = (A <<< 1);
      assign C = A[NBITS-2];
    3'b001 :
      S = (A >>> 1)
      assign C = A[0];
    3'b010 : 
      S = (A << 1)
      C = A[NBITS-1];
    3'b011 :
      S = (A >> 1);
      C = A[0];
    3'b100 :
      S = (A << 1);
      S[0] = A[NBITS-1];
      C = A[NBITS-1];
    3'b101 :
      S = (A >> 1);
      S[NBITS-1] = A[0];
      C = A[0];
    3'b110 :
      S = (A << 1);
      S[0] = C;
      C = A[NBITS];
    3'b111 :
      S = (A >> 1);
      S[NBITS-1] = C;
      C = A[0];

endmodule