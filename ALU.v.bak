module ALU(A,B,OpCode,Q,C);
  parameter NBITS = 4;
  input [NBITS-1:0] A,B;
  input [2:0] OpCode;
  output [NBITS:0] Q;
  output C;
  reg [2:0] Mode;
  reg [NBITS:0] S;

  case(OpCode)
    3'b000 : S = A + B;
    3'b001 : S = A - B;
    3'b010 : S = A + B + 1;
    3'b011 : S = A - B - 1;
    3'b100 : S = A and B;
    3'b101 : S = A or B;
    3'b110 : S = A xor B;
    3'b111 : S = ~B;
    default : S = 5'00000;
  endcase
  assign Q = S;

endmodule